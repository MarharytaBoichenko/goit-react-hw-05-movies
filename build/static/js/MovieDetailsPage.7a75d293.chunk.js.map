{"version":3,"sources":["apiHelpers/api.js","views/MovieDetailsPage/MovieDetailsPage.module.css","views/MovieDetailsPage/MovieDetailsPage.js"],"names":["URL","KEY","api","fetchTrendFilms","query","fetch","then","response","ok","json","Promise","reject","Error","fetchFilmsOnQuery","fetchFilmById","movieId","fetchFilmCredits","fetchFilmReviews","module","exports","MovieDetailsPage","useState","film","setFilm","loading","setLoading","id","useParams","navigate","useNavigate","location","useLocation","useEffect","fetchFilmDetails","data","console","log","type","className","s","button","onClick","state","from","filmThumb","src","alt","image","poster_path","title","info","vote_average","overview","genres","map","genre","name","join","to"],"mappings":"yIAAA,IAAMA,EAAM,gCACNC,EAAM,mCAmDZ,IAAMC,EAAM,CACVC,gBAlDF,SAAyBC,GACvB,OAAOC,MAAM,GAAD,OAAIL,EAAJ,oCAAmCC,IAAOK,MAAK,SAAAC,GACzD,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,wBA8CxBC,kBA1CF,SAA2BT,GACzB,OAAOC,MAAM,GAAD,OACPL,EADO,gCACoBC,EADpB,4DAC2EG,EAD3E,YAEVE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,wBAoCxBE,cAjCF,SAAuBC,GACrB,OAAOV,MAAM,KAAD,OACZL,EADY,iBACAe,EADA,oBACmBd,EADnB,oBACyCK,MAAK,SAAAC,GACxD,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,wBA4BxBI,iBAzBF,SAA0BD,GACxB,OAAOV,MAAM,KAAD,OACZL,EADY,iBACAe,EADA,4BAC2Bd,EAD3B,oBACiDK,MAC3D,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,uBAmB1BK,iBAfF,SAA0BF,GACxB,OAAOV,MAAM,GAAD,OACPL,EADO,iBACKe,EADL,4BACgCd,EADhC,2BAEVK,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,wBAWXV,O,mBC3DfgB,EAAOC,QAAU,CAAC,OAAS,iCAAiC,MAAQ,gCAAgC,SAAW,mCAAmC,MAAQ,gCAAgC,OAAS,iCAAiC,UAAY,oCAAoC,KAAO,iC,uJCW5Q,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACQX,EAAkBZ,IAAlBY,cAEAY,EAAOC,cAAPD,GACFE,EAAWC,cACXC,EAAWC,cAOjBC,qBAAU,WACG,KAAPN,GAGJO,MACC,CAACP,IAEJ,IAAMO,EAAmB,WACvBR,GAAW,GACXX,EAAcY,GAAIpB,MAAK,SAAA4B,GACrBC,QAAQC,IAAIF,GACZX,EAAQW,GACRT,GAAW,OAIf,OACE,gCACE,wBAAQY,KAAK,SAASC,UAAWC,IAAEC,OAAQC,QAtBhC,WAAO,IAAD,IACnBb,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUY,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAqBhC,qBAGCnB,GAAW,cAAC,IAAD,IAEXF,GACC,qCACE,sBAAKgB,UAAWC,IAAEK,UAAlB,UAIM,qBACEC,IAAI,yCACJC,IAAI,YACJR,UAAWC,IAAEQ,SAGf,qBACEF,IAAG,yCAAoCvB,EAAK0B,aAC5CF,IAAKxB,EAAK2B,MACVX,UAAWC,IAAEQ,QAKnB,sBAAKT,UAAWC,IAAEW,KAAlB,UACE,oBAAIZ,UAAWC,IAAEU,MAAjB,SAAyB3B,EAAK2B,QAC9B,wCAAW3B,EAAK6B,gBAChB,0CACA,mBAAGb,UAAWC,IAAEa,SAAhB,SAA2B9B,EAAK8B,WAChC,wCACA,mBAAGd,UAAWC,IAAEc,OAAhB,SACG/B,EAAK+B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,aAIjD,gCACE,uDACA,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAE,kBAAahC,EAAb,SAAwBgB,MAAO,CAAEC,KAAMb,GAA/C,oBAKF,6BACE,cAAC,IAAD,CAAM4B,GAAE,kBAAahC,EAAb,YAAR,0BAGJ,cAAC,IAAD","file":"static/js/MovieDetailsPage.7a75d293.chunk.js","sourcesContent":["const URL = 'https://api.themoviedb.org/3/';\nconst KEY = '3235240fde1a44b4e45cd09b4117d7e1';\n\nfunction fetchTrendFilms(query) {\n  return fetch(`${URL}trending/all/day?api_key=${KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Film  not found`));\n  });\n}\n\nfunction fetchFilmsOnQuery(query) {\n  return fetch(\n    `${URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}&page=1`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Film  not found`));\n  });\n}\nfunction fetchFilmById(movieId) {\n  return fetch(`\n${URL}movie/${movieId}?api_key=${KEY}&language=en-US`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Film  not found`));\n  });\n}\nfunction fetchFilmCredits(movieId) {\n  return fetch(`\n${URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`No data  found`));\n    },\n  );\n}\nfunction fetchFilmReviews(movieId) {\n  return fetch(\n    `${URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`No data  found`));\n  });\n}\nconst api = {\n  fetchTrendFilms,\n  fetchFilmsOnQuery,\n  fetchFilmById,\n  fetchFilmCredits,\n  fetchFilmReviews,\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MovieDetailsPage_button__2yIpR\",\"image\":\"MovieDetailsPage_image__Z1ERs\",\"overview\":\"MovieDetailsPage_overview__2XEaf\",\"title\":\"MovieDetailsPage_title__VrDbs\",\"genres\":\"MovieDetailsPage_genres__2TnoP\",\"filmThumb\":\"MovieDetailsPage_filmThumb__14yZy\",\"info\":\"MovieDetailsPage_info__2D1ex\"};","import { useState, useEffect } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport api from '../../apiHelpers/api';\nimport Loading from '../../components/Loader/Loading';\nimport s from './MovieDetailsPage.module.css';\n\nexport default function MovieDetailsPage() {\n  const [film, setFilm] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { fetchFilmById } = api;\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  // console.log(location.state.from);\n\n  const goBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  useEffect(() => {\n    if (id === '') {\n      return;\n    }\n    fetchFilmDetails();\n  }, [id]);\n\n  const fetchFilmDetails = () => {\n    setLoading(true);\n    fetchFilmById(id).then(data => {\n      console.log(data);\n      setFilm(data);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <div>\n      <button type=\"button\" className={s.button} onClick={goBack}>\n        Go back\n      </button>\n      {loading && <Loading />}\n\n      {film && (\n        <>\n          <div className={s.filmThumb}>\n            {\n              // <div className={s.imageThumb}>\n              (\n                <img\n                  src=\"https://i.ibb.co/8mnHvb2/no-poster.jpg\"\n                  alt=\"no_poster\"\n                  className={s.image}\n                />\n              ) && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                  alt={film.title}\n                  className={s.image}\n                />\n              )\n              // </div>\n            }\n            <div className={s.info}>\n              <h2 className={s.title}>{film.title}</h2>\n              <p>Rating {film.vote_average}</p>\n              <h3>Overview</h3>\n              <p className={s.overview}>{film.overview}</p>\n              <h4>Genres</h4>\n              <p className={s.genres}>\n                {film.genres.map(genre => genre.name).join(' ')}\n              </p>\n            </div>\n          </div>\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to={`/movies/${id}/cast`} state={{ from: location }}>\n                  Cast\n                </Link>\n              </li>\n\n              <li>\n                <Link to={`/movies/${id}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n            <Outlet />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}